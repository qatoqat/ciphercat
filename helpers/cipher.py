encipher_dict = {
    "J": "ðŸ¡¤-", "D": "ðŸ¡¥-", "B": "âˆ£ðŸ¡¥-",
    "G": "âˆ£ðŸ¡¤", "C": "ðŸ¡¤", "T": "ðŸ¡¥", "P": "âˆ£ðŸ¡¥",
    "H": "\"", "Y": "^", "W": "âˆ£^",
    "X": "âˆ£âˆ£", "N": "=", "M": "âˆ£=",
    "K": "âˆ£ðŸ¡§", "S": "ðŸ¡§", "L": "ðŸ¡¦", "F": "âˆ£ðŸ¡¦",
    "Q": "âˆ£ðŸ¡§-", "Z": "ðŸ¡§-", "R": "ðŸ¡¦-", "V": "âˆ£ðŸ¡¦-",
    "A": ">", "E": "<", "I": "É…",
    "O": "O", "U": "V",
}

decipher_dict = {
    "ðŸ¡¤-": "J", "ðŸ¡¥-": "D", "âˆ£ðŸ¡¥-": "B",
    "âˆ£ðŸ¡¤": "G", "ðŸ¡¤": "C", "ðŸ¡¥": "T", "âˆ£ðŸ¡¥": "P",
    "\"": "H", "^": "Y", "âˆ£^": "W",
    "âˆ£âˆ£": "X", "=": "N", "âˆ£=": "M",
    "âˆ£ðŸ¡§": "K", "ðŸ¡§": "S", "ðŸ¡¦": "L", "âˆ£ðŸ¡¦": "F",
    "âˆ£ðŸ¡§-": "Q", "ðŸ¡§-": "Z", "ðŸ¡¦-": "R", "âˆ£ðŸ¡¦-": "V",
    ">": "A", "<": "E", "É…": "I",
    "O": "O", "V": "U",
}

arrows = ["ðŸ¡¤", "ðŸ¡¥", "ðŸ¡§", "ðŸ¡¦"]


def encipher(plaintext):
    return "".join([encipher_dict[c] if c in encipher_dict else c for c in plaintext.upper()])


def decipher(ciphertext):
    plaintext = ""
    box = [None, None, None]
    for s in ciphertext:
        if s == "âˆ£" and box == [None, None, None]:
            box[0] = s
        elif s in arrows and box[1] is None and box[2] is None:
            box[1] = s
        elif s in ["-"] and box[2] is None:
            box[2] = s
        else:
            if box == ["âˆ£", None, None]:
                plaintext += "X" if s == "âˆ£" else "W" if s == "^" else "M" if s == "=" else "".join(box) + s
                box = [None, None, None]
            else:
                x = "".join([x if x is not None else "" for x in box])
                plaintext += decipher_dict[x] if x in decipher_dict else x
                box = [None, None, None]
                if s in "><É…OV":
                    plaintext += decipher_dict[s] if s in decipher_dict else s
                elif s == "âˆ£":
                    box[0] = s
                elif s in arrows:
                    box[1] = s
                elif s in ["-", "=", "^", "\""]:
                    box[2] = s
                else:
                    plaintext += s
    if box != [None, None, None]:
        e = "".join([e if e is not None else "" for e in box])
        plaintext += decipher_dict[e] if e in decipher_dict else e
    return plaintext


if __name__ == "__main__":
    c_set = "QWERTYUIOPASDFGHJKLZXCVBNM1234567890!@#$%&*()_+"

    for a_char in c_set:
        for b_char in c_set:
            for c_char in c_set:
                pl = a_char + b_char + c_char
                ci = encipher(pl)
                de = decipher(ci)
                # print(f"'{pl}' '{de}'")
                if pl != de:
                    raise Exception(f"'{pl}' '{de}'")
